{"version":3,"sources":["Search.js","RepoView.js","CommitView.js","DiffView.js","MainView.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","setState","defineProperty","onFormSubmit","preventDefault","handleSearch","state","searchText","initialState","react_default","a","createElement","onSubmit","className","type","placeholder","onChange","Component","RepoView","org","repos","error","mockData","id","forks_count","handleErrors","bind","assertThisInitialized","response","ok","updateCommitView","Error","statusText","prevProps","_this2","console","log","fetch","then","result","json","catch","repoName","_this3","_this$state","length","repoViews","sort","elm1","elm2","map","entry","index","key","onClick","e","handleClick","href","CommitView","repoCommits","sha","commit","message","_this$props","commits","updateDiffView","DiffView","diffText","commitSha","headers","Accept","text","files","parseDiff","_ref","oldRevision","newRevision","hunks","es","viewType","diffType","hunk","content","MainView","handleCommitViewUpdate","handleDiffViewUpdate","src_Search","src_RepoView","src_CommitView","src_DiffView","ReactDOM","render","src_MainView","document","getElementById"],"mappings":"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","file":"static/js/main.3c53bcde.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      searchText: ''\n    }\n\n    this.state = this.initialState\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name] : value\n    });\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.handleSearch(this.state.searchText);\n  }\n\n  render() {\n    const { searchText } = this.state;\n\n    return (\n      <form onSubmit={this.onFormSubmit} className=\"rowC\">\n        <input\n            type=\"text\"\n            name=\"searchText\"\n            value={searchText}\n            placeholder=\"Search repositories by organization, e.g. Netflix\"\n            onChange={this.handleChange} />\n        <button type=\"submit\">\n            Search\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react'\n\nclass RepoView extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      org: '',\n      repos: [],\n      error: false\n    }\n\n    // Hard coded repositories to avoid exceeding rate limit\n    this.mockData = {\n      org: 'Netflix',\n      repos: [\n        {\n          id: \"123\",\n          name:\"Hystrix\",\n          forks_count: \"100\"\n        },\n        {\n          id: \"124\",\n          name:\"Asgard\",\n          forks_count: \"50\"\n        }\n      ]\n    }\n\n    this.handleErrors = this.handleErrors.bind(this);\n  }\n\n  handleErrors(response) {\n      if (!response.ok) {\n          this.setState({\n            org: '',\n            repos: [],\n            error: true\n          })\n\n          this.props.updateCommitView('')\n\n          throw Error(response.statusText);\n      }\n      return response;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.org !== prevProps.org && this.props.org) {\n\n      if(this.props.org) {\n        console.log(\"Load repos...\")\n\n        if(process.env.REACT_APP_USE_GITHUB_API === \"true\") {\n          const { org } = this.props\n\n          const url =\n            'https://api.github.com/orgs/' + org + '/repos'\n\n          fetch(url)\n            .then(this.handleErrors)\n            .then(result => result.json())\n            .catch(error => {\n              console.log(error);\n            })\n            .then(repos => {\n              this.setState({\n                org: org,\n                repos: repos\n              })\n            })\n        }\n        else {\n          this.setState(this.mockData)\n        }\n      }\n      else {\n        this.setState(this.initialState)\n      }\n    }\n  }\n\n  handleClick(repoName) {\n    this.props.updateCommitView(repoName)\n  }\n\n  render() {\n    const { repos, error } = this.state\n\n    if(repos && repos.length > 0) {\n      const repoViews = repos\n        .sort((elm1, elm2) => {\n          return elm2.forks_count - elm1.forks_count\n        })\n        .map((entry, index) => {\n          return <li key={entry.id} onClick={(e) => this.handleClick(entry.name, e)}><a href=\"#\">{entry.name}</a></li>\n      })\n\n      return (\n        <div>\n          <h2>Repositories</h2>\n          <ul>{repoViews}</ul>\n        </div>\n      )\n    }\n    else if(error) {\n      return <div><h2>No repositories were found for this organization</h2></div>\n    }\n\n    return null\n  }\n}\n\nexport default RepoView;\n","import React, { Component } from 'react'\n\nclass CommitView extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      org: '',\n      repoName: '',\n      repoCommits: []\n    }\n\n    this.state = this.initialState\n\n    // Hard coded repo commits to avoid exceeding rate limit\n    this.mockData = {\n      repoCommits:[{\n        \"sha\": \"648102625a4b6d2c3669b7837c2a5768c20b16a3\",\n        \"commit\": {\n          \"message\": \"Update OSSMETADATA\\n\\nAsgard is unused at Netflix\",\n        }\n      },\n      {\n        \"sha\": \"825ff569410dd063755873a37326513f807f914b\",\n        \"commit\": {\n          \"message\": \"Merge pull request #723 from zanthrash/fix_fp_cache\\n\\nremoves Fast Property caching so app can start up.\",\n        }\n      }]\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.repoName !== prevProps.repoName) {\n      if(this.props.repoName) {\n        console.log(\"Load commits...\")\n\n        if(process.env.REACT_APP_USE_GITHUB_API === \"true\") {\n          const { org, repoName } = this.props\n\n          const url =\n            'https://api.github.com/repos/' + org + '/' + repoName + '/commits';\n\n\n          fetch(url)\n            .then(result => result.json())\n            .then(commits => {\n              this.setState({\n                repoCommits: commits\n              })\n            })\n        }\n        else {\n          this.setState(this.mockData)\n        }\n      }\n      else {\n        // clear the view\n        this.setState(this.initialState)\n      }\n    }\n  }\n\n  handleClick(event, entry) {\n    this.props.updateDiffView(entry.sha)\n  }\n\n  render() {\n    const { repoCommits } = this.state\n\n    if (repoCommits && repoCommits.length > 0) {\n      const commits = repoCommits\n        .map((entry, index) => {\n          return <li key={index} onClick={(e) => this.handleClick(e, entry)}>{entry.commit.message}</li>\n      })\n\n      return (\n        <div>\n          <h3>Commits</h3>\n          <ul>{commits}</ul>\n        </div>\n      )\n    }\n\n    return null\n  }\n}\n\nexport default CommitView;\n","import React, { Component } from 'react'\nimport {parseDiff, Diff, Hunk, Decoration} from 'react-diff-view';\n\nclass DiffView extends Component {\n  constructor(props) {\n    super(props)\n\n\n    this.initialState = {\n      diffText: '',\n      commitSha: ''\n    }\n\n    this.state = this.initialState\n\n    // Hard coded repo commits to avoid exceeding rate limit\n    this.mockData = {\n      commitSha: '825ff569410dd063755873a37326513f807f914b',\n      diffText: `diff --git a/grails-app/services/com/netflix/asgard/FastPropertyService.groovy b/grails-app/services/com/netflix/asgard/FastPropertyService.groovy\nindex 9ca9fb81..0bc85ac3 100644\n--- a/grails-app/services/com/netflix/asgard/FastPropertyService.groovy\n+++ b/grails-app/services/com/netflix/asgard/FastPropertyService.groovy\n@@ -57,7 +57,12 @@ class FastPropertyService implements CacheInitializer {\n                     FastProperty.fromXml(fastPropertyData)\n                 }\n             } else {\n-                throw new ServerException(\"Failure to fetch fast property list from $/{url}\")\n+                // throw new ServerException(\"Failure to fetch fast property list from $/{url}\")\n+                // This API call no longer works and prevents the app from starting up properly.\n+                // CRUD operations for fast pproperties are not used so we are just going to log the error and return an\n+                // empty list to the cache.\n+                log.warn(\"Failure to fetch fast property list from $/{url}\")\n+                return []\n             }\n         }\n         []\n@@ -255,6 +260,6 @@ class FastPropertyService implements CacheInitializer {\n     private String platformServiceHostAndPort(UserContext userContext) {\n         String host = configService.getRegionalPlatformServiceServer(userContext.region)\n         String port = configService.platformServicePort\n-        (configService.online && host && port) ? \"$/{host}:$/{port}\" : null\n+        ((configService.online || true) && host && port) ? \"$/{host}:$/{port}\" : null\n     }\n }\n`\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.commitSha !== prevProps.commitSha) {\n      if(this.props.commitSha) {\n        console.log(\"Load diff...\")\n\n        if(process.env.REACT_APP_USE_GITHUB_API === \"true\") {\n          const { org, repoName, commitSha } = this.props\n          const url = 'https://api.github.com/repos/' + org + '/' + repoName + '/commits/' + commitSha\n\n          fetch(url, {\n            headers: {\n              \"Accept\": \"application/vnd.github.VERSION.diff\"\n            }\n          })\n          .then(response => {\n            response.text().then(diffText => {\n              //debugger;\n              this.setState({\n                commitSha: commitSha,\n                diffText: diffText\n              })\n            });\n          })\n        }\n        else {\n          this.setState(this.mockData)\n        }\n      }\n      else {\n          // clear the view\n          this.setState(this.initialState)\n      }\n    }\n  }\n\n  render() {\n    const { diffText, commitSha } = this.state\n\n    if(diffText && commitSha) {\n      const files = parseDiff(diffText);\n\n      const renderFile = ({oldRevision, newRevision, type, hunks}) => (\n          <Diff key={oldRevision + '-' + newRevision} viewType=\"split\" diffType={type} hunks={hunks}>\n              {hunks => hunks.map(hunk => (\n                  <Decoration key={'decoration-' + hunk.content}>\n                      {hunk.content}\n                  </Decoration>,\n                  <Hunk key={hunk.content} hunk={hunk} />\n                )\n              )}\n          </Diff>\n      );\n\n      return (\n          <div>\n            <h4>Diff</h4>\n              {files.map(renderFile)}\n          </div>\n      );\n    }\n    return null\n  }\n}\n\nexport default DiffView;\n","import React, { Component } from 'react'\nimport Search from './Search'\nimport RepoView from './RepoView'\nimport CommitView from './CommitView'\nimport DiffView from './DiffView'\nimport {parseDiff, Diff, Hunk, Decoration} from 'react-diff-view';\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      org: '',\n      repoName: '',\n      commitSha: ''\n    }\n\n    this.state = this.initialState\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleCommitViewUpdate = this.handleCommitViewUpdate.bind(this);\n    this.handleDiffViewUpdate = this.handleDiffViewUpdate.bind(this);\n  }\n\n  handleSearch(searchText) {\n      if(searchText !== this.state.org) {\n        this.setState({\n          org: searchText,\n          repoName: '',\n          commitSha: ''\n        })\n      }\n  }\n\n  handleCommitViewUpdate(repoName) {\n    this.setState({\n      org: this.state.org,\n      repoName: repoName,\n      commitSha: ''\n    })\n  }\n\n  handleDiffViewUpdate(sha) {\n    this.setState({\n      org: this.state.org,\n      repoName: this.state.repoName,\n      commitSha: sha\n    })\n  }\n\n  render() {\n    const { org, repoName, commitSha} = this.state\n\n    return (\n      <div>\n        <Search handleSearch={this.handleSearch}/>\n        <div className='rowC'>\n          <RepoView org={org} updateCommitView={this.handleCommitViewUpdate}/>\n          <CommitView org={org} repoName={repoName} updateDiffView={this.handleDiffViewUpdate}/>\n          <DiffView org={org} repoName={repoName} commitSha={commitSha}/>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default MainView\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport MainView from './MainView'\n//import App from './App'\n\nimport './index.css'\n\nReactDOM.render(<MainView/>, document.getElementById('root'))\n//ReactDOM.render(<App diffText={diffText}/>, document.getElementById('root'))\n"],"sourceRoot":""}